name: CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/**'
  pull_request:
    branches: [ '**' ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (pytest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system deps (poppler, tesseract)
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils tesseract-ocr tesseract-ocr-por tesseract-ocr-eng

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements.txt
            backend/requirements-dev.txt

      - name: Install Python deps (dev)
        run: pip install -r requirements-dev.txt

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Run tests (pytest + coverage)
        run: pytest --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-xml
          path: backend/coverage.xml

  frontend:
    name: Frontend (Vite build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint (ESLint)
        run: npx eslint .

      - name: Build
        run: npm run build
        env:
          VITE_API_BASE_URL: ${{ vars.VITE_API_BASE_URL }}
          VITE_APP_VERSION: ${{ github.ref_name }}+${{ github.sha }}

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  deploy_frontend:
    if: github.ref == 'refs/heads/main'
    needs: frontend
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./dist

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish_backend:
    if: github.ref == 'refs/heads/main'
    needs: backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute lowercase repo
        id: vars
        run: echo "repo_lc=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.api
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.vars.outputs.repo_lc }}-api:latest
            ghcr.io/${{ steps.vars.outputs.repo_lc }}-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Worker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.worker
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.vars.outputs.repo_lc }}-worker:latest
            ghcr.io/${{ steps.vars.outputs.repo_lc }}-worker:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
